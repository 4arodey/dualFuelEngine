#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: Addition to OpenFOAM v6
#  \\    /   O peration     | Website:	https://github.com/StasF1/dualFuelEngine
#   \\  /    A nd           | Copyright (C) 2019 Stanislau Stasheuski
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is not part of OpenFOAM, but part of dualFuelEngine â€“ OpenFOAM
#     addition.
# 
#     dualFuelEngine (like OpenFOAM) is free software: you can redistribute it 
#     and/or modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation, either version 3 of the License,
#     or (at your option) any later version.
# 
#     dualFuelEngine (like OpenFOAM) is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#     See the GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with this repository. If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     Allrun
#
#------------------------------------------------------------------------------

cd ${0%/*} || exit 1 # Run from this directory

startAllrunTime=`date +%s` # starting stopwatch

# prism case
potentialFoam/prism/./Allrun            || cat log.potentialFoam
scalarTransportFoam/prism/./Allrun      || cat log.scalarTransportFoam
testFoam/prism/./Allrun                 || cat log.testFoam
printf '\n'

# RiemannTube case
multiCompression/RiemannTube/./Allrun   || cat log.multiCompression
printf '\n'

# quadPiston case
multiCompression/quadPiston/./Allrun	|| cat log.multiCompression
potentialFoam/quadPiston/./Allrun 		|| cat log.potentialFoam
scalarTransportFoam/quadPiston/./Allrun || cat log.scalarTransportFoam
printf '\n'

# cylPiston case
multiCompression/cylPiston/./Allrun		|| cat log.blockMesh
printf '\n'

# Show evaluation time
endAllrunTime=`date +%s` # stoping stopwatch
solveAllrunTime=$((endAllrunTime-startAllrunTime))
printf 'Calculation time: %dh:%dm:%ds\n'\
	 $(($solveAllrunTime/3600)) $(($solveAllrunTime%3600/60)) $(($solveAllrunTime%60))

#------------------------------------------------------------------------------