/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: dualFuelEngline addition to OpenFOAM v7
   \\    /   O peration     | Website:  https://github.com/StasF1/dualFuelEngine
    \\  /    A nd           | Version:  0.3-alpha
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#includeEtc "caseDicts/mesh/generation/snappyHexMeshDict.cfg"

castellatedMesh on;
snap            off;
addLayers       off;

geometry
{
        // Injection patches
        injectionXMinus.stl
        {
            type triSurfaceMesh;
            name injectionXMinus;
        }
        injectionXPlus.stl
        {
            type triSurfaceMesh;
            name injectionXPlus;
        }
        injectionYMinus.stl
        {
            type triSurfaceMesh;
            name injectionYMinus;
        }
        injectionYPlus.stl
        {
            type triSurfaceMesh;
            name injectionYPlus;
        }

        // Inlet patches
        inletXMinus.stl
        {
            type triSurfaceMesh;
            name inletXMinus;
        }
        inletXPlus.stl
        {
            type triSurfaceMesh;
            name inletXPlus;
        }
        inletYMinus.stl
        {
            type triSurfaceMesh;
            name inletYMinus;
        }
        inletYPlus.stl
        {
            type triSurfaceMesh;
            name inletYPlus;
        }

        // Other geometry
        outlet.stl
        {
            type triSurfaceMesh;
            name outlet;
        }
        valve.stl
        {
            type triSurfaceMesh;
            name valve;
        }
        walls.stl
        {
            type triSurfaceMesh;
            name walls;
        }
        piston.stl
        {
            type triSurfaceMesh;
            name piston;
        }
};

castellatedMeshControls
{
    features();

    refinementSurfaces
    {
        // Injection
        "injectionXMinus|injectionXPlus|injectionYMinus|injectionYPlus"
        {
            level (0 0);
            patchInfo { type patch; }
        }

        // Inlet
        "inletXMinus|inletXPlus|inletYMinus|inletYPlus"
        {
            level (0 0);
            patchInfo { type patch; }
        }

        // Other surfaces
        outlet
        {
            level (0 0);
            patchInfo { type patch; }
        }

        "valve|walls|piston" /* surface-wise min and max refinement level */
        {
            level (0 0);
            patchInfo { type wall; }
        }
    }

    refinementRegions
    {
        ".*"
        {
            mode distance;
            levels ((0 0));
        }
    }

    locationInMesh (0 0 1.75);

    nCellsBetweenLevels 1;
}


snapControls /* off */
{
    // explicitFeatureSnap    true;
    // implicitFeatureSnap    false;
}

addLayersControls /* off */
{
    layers
    {
        // Injection
        "injectionXMinus|injectionXPlus|injectionYMinus|injectionYPlus.*"
        {
            nSurfaceLayers 0;
        }

        // Inlet 
        "inletXMinus|inletXPlus|inletYMinus|inletYPlus.*"
        {
            nSurfaceLayers 0;
        }
        
        // Other geometry
        "outlet|valve|walls|piston.*"
        {
            nSurfaceLayers 0;
        }
    }

    relativeSizes       true; // false, usually with firstLayerThickness
    expansionRatio      1.2;
    finalLayerThickness 0.5;
    minThickness        1e-3;
    //  firstLayerThickness 0.01;

// maxThicknessToMedialRatio 0.6;
}

writeFlags
(
    // scalarLevels
    layerSets
    layerFields
);

mergeTolerance 1e-6;

// ************************************************************************* //
