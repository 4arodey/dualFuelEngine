#!/bin/sh
#----------------------------------*-sh-*--------------------------------------
#  =========                 |
#  \\      /  F ield         | OpenFOAM: dualFuelEngline addition to OpenFOAM v7
#   \\    /   O peration     | Website:  https://github.com/StasF1/dualFuelEngine
#    \\  /    A nd           | Copyright (C) 2018-2020 Stanislau Stasheuski
#     \\/     M anipulation  |
# -----------------------------------------------------------------------------
# License
#     This file part of dualFuelEngine â€“ OpenFOAM addition.
#
#     dualFuelEngine (like OpenFOAM) is free software: you can redistribute it 
#     and/or modify it under the terms of the GNU General Public License as
#     published by the Free Software Foundation, either version 3 of the License,
#     or (at your option) any later version.
#
#     dualFuelEngine (like OpenFOAM) is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#     See the GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this repository. If not, see <http://www.gnu.org/licenses/>
#
# File
#     etc/scripts/makeBackup
#
# Description
#     Script to make backup of the OpenFOAM case
#
#------------------------------------------------------------------------------

usage () {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat <<USAGE

Usage: ${0##*/} [OPTIONS]
options:
  -c | -case <dir>     specify alternate case directory, default is the cwd (full path required)
  -n | -name <name>    specify backup name, default is the YYYY-MM-DD_TIME
  -a | -archive        create archive
  -h | --help          help

USAGE
    exit 1
}

while [ "$#" -gt 0 ]
do
   case "$1" in
   -c | -case)
      [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
      CASE_DIR=$2
      shift 2
      ;;
   -n | -name)
      [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
      BACKUP_NAME=$2
      shift 2
      ;;
   -a | -archive)
      archive=yes
      shift
      ;;
   -h | --help)
     usage
     ;;
   *)
      usage "Invalid option '$1'"
      ;;
    esac
done

# If $CASE_DIR variable is empty set it as current directory 
if [[ ! -n "$CASE_DIR" ]]; then
    CASE_DIR=${PWD}
fi

# If $BACKUP_NAME variable is empty set it as current date 
if [[ ! -n "$BACKUP_NAME" ]]; then
    day=`date +%F`
    time=`date +%H%M`
    BACKUP_NAME="${day}_${time}"
fi

################################################################################

printf 'Backing up %s case to %s\n' "$CASE_DIR" "$BACKUP_NAME.bak"

# Create backup folder
BACKUP_PATH=${CASE_DIR}/backups/${BACKUP_NAME}
mkdir -p $BACKUP_PATH.bak

# Copy all results & logs to the backup folder
for i in `seq 0 9`; do
    rsync -a $CASE_DIR/$i*     $BACKUP_PATH.bak 2>/dev/null;
done

cp -r $CASE_DIR/*.foam         $BACKUP_PATH.bak
cp -r $CASE_DIR/log.*          $BACKUP_PATH.bak
cp -r $CASE_DIR/constant       $BACKUP_PATH.bak
cp -r $CASE_DIR/system         $BACKUP_PATH.bak
cp -r $CASE_DIR/postProcessing $BACKUP_PATH.bak 2>/dev/null

# Archive the backup folder and delete it
if [[ "$archive" ]]; then
    tar -C $CASE_DIR/backups -czf $BACKUP_PATH.tar.qz $BACKUP_NAME.bak\
        && rm -r $BACKUP_PATH.bak
fi

#------------------------------------------------------------------------------
